import math
import matplotlib.pyplot as plt
import numpy as np

def constrain(val, min_val, max_val):
    return min(max_val, max(min_val, val))

fig, axs = plt.subplots()          # Setting up plot

x = 1    #Number of Planes   -   variable
y = 1    #Number of T-Rexes   -   variable

r = 3.35    #Radius of Plane Fuselage
wingspan = 28.45    #Wingspan
wF = 3.34   #Width of Fuselage
aF = np.pi*(r**2)   #Cross-Sectional Area of Fuselage
aW = 1*(wingspan-wF)    #Cross-Sectional Area of Wing

mP = 44500    #Mass of a Plane
mT = 5500    #Mass of a T-Rex
cdP = 0.0075    #Coefficient of Drag for the Plane
cdT = 0.7    #Coefficient of Drag for the T-Rex
aP = aF + aW    #Cross-Sectional Area of a Plane
aT = 1.2    #Cross-Sectional Area of a T-Rex

m = (x*mP) + (y*mT) #Total mass of planes and T-Rexes

g = 9.81    #Acceleration due to Gravity
p = 0.99    #Density of Air
fP = 95.3 * (10**3)    #Force generated by one plane
theta = math.radians(15)    #Angle Plane Travels at
d = 5570.5  #Distance of Flight
cPPPH = 10000  #Cost Per Plane Per Hour of Flight
cTicket = 100    #Cost of One Ticket

a = 2* ( (m*g) - (fP*x*math.sqrt(2)*math.sin(theta)) )
b = p* math.sqrt(2)* math.sin(theta)* ((x*cdP*aP) + (y*cdT*aT))
speed = math.sqrt(a/b)  #Speed equation

#print(d +", " + cPPPH + ", " + x + ", " + speed)
print("%f, %f, %f, %f" % (d, cPPPH, x, speed))
#print(d), print(cPPPH)

cTotal = (d*cPPPH*x) / speed    #Total Cost equation

max = 0
xMax = 0
yMax = 0

for x in range(1,10000):
    for y in range(1,10000):
        m = (x*mP) + (y*mT) #Total mass of planes and T-Rexes
        a = 2* ( (m*g) - (fP*x*math.sqrt(2)*math.sin(theta)) )
        b = p* math.sqrt(2)* math.sin(theta)* ((x*cdP*aP) + (y*cdT*aT))
        speed = math.sqrt(a/b)  #Speed equation

        cTotal = (d*cPPPH*x) / speed    #Total Cost equation
        if(cTotal > max):
            max = cTotal
            xMax = x
            yMax = y
        print((x*10000)+y)
print("(" + str(x) + ", " + str(y) + ")" + ", " + str(max))